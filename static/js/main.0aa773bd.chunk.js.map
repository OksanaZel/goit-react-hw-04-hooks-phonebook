{"version":3,"sources":["App/App.styled.jsx","Title/Title.styled.jsx","Title/Title.jsx","ContactList/ContactList.styled.jsx","ContactList/ContactList.jsx","ContactForm/ContactForm.styled.jsx","ContactForm/ContactForm.jsx","Filter/Filter.jsx","App/App.jsx","index.js"],"names":["Container","styled","div","SectionTitle","h2","Title","title","ContactListContainer","ContactListItem","Button","ContactList","contacts","onDeleteContact","map","id","name","number","onClick","Form","Label","Input","ContactForm","onSubmit","formik","useFormik","initialValues","validationSchema","Yup","matches","required","values","setSubmitting","resetForm","handleSubmit","type","onChange","handleChange","value","touched","errors","disabled","isSubmitting","Filter","App","useState","JSON","parse","window","localStorage","getItem","initialContacts","setContacts","filter","setFilter","useEffect","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContact","find","alert","nanoid","prevContacts","e","console","log","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aa773bd.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nwidth: 900px;\r\nbackground: #FFFFFF;\r\nbox-shadow: 0px 4px 10px #2196f3;\r\nmargin: 20px auto;\r\npadding: 25px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const SectionTitle = styled.h2`\r\nmargin-bottom: 25px;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SectionTitle } from \"./Title.styled\";\r\n\r\nfunction Title({title}) {\r\n    return (\r\n        <SectionTitle>{title}</SectionTitle>\r\n    )\r\n}\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Title;\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const ContactListContainer = styled.ul`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nexport const ContactListItem = styled.li`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nmargin-bottom: 25px;\r\nmax-width: 450px;\r\n\r\n& svg {\r\n    width: 18px;\r\n    height: 18px;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 200px;\r\n  padding: 2px 32px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n  border-radius: 4px;\r\n  border-style: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 1.88;\r\n  letter-spacing: 0.06em;\r\n  color: #ffffff;\r\n  background-color: #2196f3;\r\n\r\n  & svg {\r\n    color: #fff;\r\n    height: 18px;\r\n    width: 18px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GoPrimitiveDot } from \"react-icons/go\";\r\nimport {AiOutlineUserDelete} from \"react-icons/ai\"\r\nimport { ContactListContainer, ContactListItem, Button} from \"./ContactList.styled\";\r\n\r\nfunction ContactList({contacts, onDeleteContact}) {\r\n    return (\r\n        <ContactListContainer>\r\n            {contacts.map(({id, name, number}) => (\r\n                <ContactListItem key={id}>\r\n                    <GoPrimitiveDot/>\r\n                    {name}: {number}\r\n                    <Button onClick={() => onDeleteContact(id)}>\r\n                        <AiOutlineUserDelete />\r\n                        Delete</Button>\r\n                </ContactListItem>\r\n            ))}\r\n        </ContactListContainer>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n    })),\r\n    onDeleteContact: PropTypes.func,\r\n}\r\n\r\nexport default ContactList;\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Form = styled.form``;\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmax-width: 400px;\r\nmargin-bottom: 25px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nborder: 1px solid lightblue;\r\nborder-radius: 4px;\r\nfont-size: 20px;\r\n\r\n&:focus {\r\n    outline: none;\r\n    border: 1px solid #2196f3;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 25px;\r\n  min-width: 200px;\r\n  padding: 2px 32px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n  border-radius: 4px;\r\n  border-style: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 1.88;\r\n  letter-spacing: 0.06em;\r\n  color: #ffffff;\r\n  background-color: #2196f3;\r\n  \r\n  & svg {\r\n      height: 18px;\r\n      width: 18px;\r\n      margin-right: 10px;\r\n  }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Yup from 'yup';\r\nimport {IoPersonAddOutline} from \"react-icons/io5\"\r\nimport { useFormik } from \"formik\";\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\n\r\nexport default function ContactForm({onSubmit}){\r\n\r\n   const formik = useFormik({\r\n     initialValues: {\r\n       name: '',\r\n       number: '',\r\n     },\r\n     validationSchema: Yup.object({\r\n       name: Yup.string()\r\n         .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, 'Имя может состоять только из букв, апострофа, тире и пробелов.')\r\n         .required('Oбязательное поле'),\r\n       number: Yup.string()\r\n         .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, 'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +')\r\n         .required('Oбязательное поле'),\r\n     }),\r\n     onSubmit: (values, { setSubmitting, resetForm }) => {\r\n       onSubmit(values),\r\n       setSubmitting(false),\r\n       resetForm()\r\n     },\r\n   });\r\n   return (\r\n     <Form onSubmit={formik.handleSubmit}>\r\n       <Label>Name\r\n       <Input\r\n         name=\"name\"\r\n         type=\"text\"\r\n         onChange={formik.handleChange}\r\n         value={formik.values.name}\r\n         />\r\n       {formik.touched.name && formik.errors.name ? (\r\n         <>{formik.errors.name}</>\r\n         ) : null}\r\n         </Label>\r\n \r\n       <Label>Number\r\n       <Input\r\n         id=\"number\"\r\n         name=\"number\"\r\n         type=\"text\"\r\n         onChange={formik.handleChange}\r\n         value={formik.values.number}\r\n         />\r\n       {formik.touched.number && formik.errors.number ? (\r\n         <>{formik.errors.number}</>\r\n       ) : null}\r\n       </Label>\r\n\r\n       <Button type=\"submit\" disabled={formik.isSubmitting}><IoPersonAddOutline /> Add contact</Button>\r\n     </Form>\r\n   );\r\n}\r\n \r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, Input } from \"../ContactForm/ContactForm.styled\";\r\n\r\nfunction Filter({value, onChange}) {\r\n    return (\r\n        <Label>Find contacts by name\r\n          <Input type=\"text\" value={value} onChange={onChange}/>\r\n        </Label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect} from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Container } from \"./App.styled\";\nimport Title from \"../Title\";\nimport ContactList from \"../ContactList\";\nimport ContactForm from \"../ContactForm\";\nimport Filter from \"../Filter\";\nimport initialContacts from \"../data/initialContacts.json\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? initialContacts});\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return\n    }\n\n      const contact = {\n        id: nanoid(5),\n        name,\n        number,\n      }\n\n      setContacts(prevContacts => [ contact,...prevContacts])\n  }\n\n  const changeFilter = (e) => {\n    console.log(e.currentTarget.value);\n    setFilter(e.currentTarget.value);\n  }\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  const deleteContact = (contactId) => {\n     setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId))\n  }\n\n  const visibleContacts = getVisibleContact();\n\n  return (\n    <Container>\n        <Title title={\"Phonebook\"} />\n        <ContactForm onSubmit={addContact} />\n        <Filter value={filter} onChange={changeFilter} />\n        <Title title={\"Contacts\"} />\n        <ContactList contacts={visibleContacts} onDeleteContact={deleteContact}/>\n      </Container>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n"],"sourceRoot":""}